name: deploy_release

on:
  release:
    types:
      #- created    # Cuando se crea una releases
      - published  # Cuando se publica una release
      - edited     # Cuando se edita una release


jobs:
  build:
    runs-on: ubuntu-latest
    # declare the environment variables
    env:
      IMAGE_NAME: ${{ github.event.repository.name }}
      VERSION: ${{ github.event.release.tag_name }}


    # steps to build and push the image
    steps:
      # loggear las env
      - name: Log env
        run: echo ${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B clean install --file pom.xml

      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.VERSION }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Tag Docker image for Docker Hub
        run: docker tag ${{ env.IMAGE_NAME }}:${{ env.VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: loggear la WEBHOOKS_STACK
        run: echo ${{ vars.WEBHOOKS_STACK_RELEASE }}

      - name: Deploy to Portainer
        run: curl -X POST ${{ vars.WEBHOOKS_STACK_RELEASE }}
